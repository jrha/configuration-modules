# ${license-info}
# ${developer-info}
# ${author-info}
# ${build-info}

=head1 NAME

NCM::nss - NCM nsswitch component

=head1 SYNOPSIS

=over 4

=item Configure()

Generates C<< /etc/nsswitch.conf >> and returns error in case of failure. If the
C<< nsswitch.conf >> file is modified and nscd is running, then nscd will be
restarted.

=back

=head1 RESOURCES

=over

=item * C<< /software/components/nss/active >> : boolean

activates/deactivates the component.

=item * C<< /software/components/nss/databases >> : nlist

A list of database names (e.g. "passwd", "hosts"). Each
name should be associated with a list of strings.

=item * C<< /software/components/nss/build >> : nlist

A list of database types (e.g. "file", "db"). If any
nss sources are set to use one of these database types
then the "build" item will be checked to see if there
is a script that should be run in order to build the
database. If so, this script will be run before changing
nsswitch.conf. The script will be run once for each
entry in nsswitch.conf that uses that data source.
The value of each key should be an nlist
with the following possible keys:

=over 4

=item script

the command line to run to generate once for each database.
Any token of the form C<< "<DB>" >> will be substituted with the
name of the database being built.

=item active

if false, then the build script will not be run.

=item depends

A database name can be provided. If specified, then
that database will be built before processing any
databases of this type.

=back

=back

=head1 EXAMPLES

   "/software/components/nss" = nlist(
      "build", nlist(
	  "db", nlist("script", "make -f /usr/local/lib/dbfiles.mk <DB>")
      ),

      "database", nlist(
          "hosts",    list("files", "nis", "dns"),
          "passwd",   list("files", "db"),
          "networks", list("nis", "files", "[NOTFOUND=return]"),
      )
    );

=head1 FILES MODIFIED

The component modifies the following files:

=over

=item * C<< /etc/nsswitch.conf >>

=back

=cut
