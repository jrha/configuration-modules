#${PMpre} NCM::Component::maui${PMpost}

use parent qw(NCM::Component CAF::Path);
our $EC = LC::Exception::Context->new->will_store_all;

our $NoActionSupported = 1;

use Readonly;

Readonly my $MAUI_SYSVINIT => '/etc/init.d/maui';
Readonly my $MAUI_SYSTEMD => '/usr/lib/systemd/system/maui.service';

use CAF::FileWriter;
use CAF::Service;

sub Configure
{

    my ($self, $config) = @_;

    my $tree = $config->getTree($self->prefix());

    my $mauipath = $tree->{configPath} || "/var/spool/maui";

    my $mauifile = $tree->{configFile} || "maui.cfg";

    # Ensure that the directory exists.
    if (! $self->directory($mauipath)) {
        $self->error("Can't create directory $mauipath: $self->{fail}");
        return 1;
    }

    # Retrieve the contents of the file.
    if (! $tree->{contents}) {
        $self->error("configuration contents not specified");
        return 1;
    }

    my $fname = "$mauipath/$mauifile";

    my $fh = CAF::FileWriter->new($fname, backup => '.old', log => $self);

    print $fh "#\n# File generated by ncm-maui\n#\n";
    print $fh $tree->{contents};

    if ($fh->close()) {
        $self->info("$fname updated");

        if ( $self->file_exists($MAUI_SYSTEMD) || $self->file_exists($MAUI_SYSVINIT) ) {
            # Restart the daemon.
            # The restart method doesn't work so manually do a stop and start.
            my $srv = CAF::Service->new(['maui'], log => $self);

            if ($srv->stop_sleep_start(5)) {
                $self->info("Maui stopped/started");
            } else {
                $self->error("maui stop/start failed: $?");
            }
        } else {
            $self->info("$MAUI_SYSVINIT or $MAUI_SYSTEMD do not exist, assuming configuration of maui client");
        }
    } else {
        $self->verbose("$fname unchanged");
    }


    return 1;
}

1;
