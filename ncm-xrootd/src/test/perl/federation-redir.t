# -*- mode: cperl -*-
# ${license-info}
# ${author-info}
# ${build-info}

use strict;
use warnings;

BEGIN {
  *CORE::GLOBAL::sleep = sub {};
}

use Test::More tests => 10;
use Test::NoWarnings;
use Test::Quattor qw(cms-fed-redir atlas-fed-redir);
use NCM::Component::xrootd;
use Readonly;
use CAF::Object;
Test::NoWarnings::clear_warnings();


=pod

=head1 SYNOPSIS

Basic test for federation redirector configuration

=cut

use constant REDIR_CONF_FILE => "/etc/xrootd/cms-fed-redir.cfg";

use constant REDIR_INITIAL_CONF_1 => 'if exec cmsd
all.role server
ofs.osslib libXrdPss.so
#pss.origin host:port
#all.manager host+:port
fi
';

use constant REDIR_INITIAL_CONF_2 => '#>>>>>>>>>>>>> Variable declarations

# Installation specific
set xrootfedxrdmanager = $XROOT_FED_REMOTE_XRD_MANAGER_ATLAS
set xrootfedcmsdmanager = $XROOT_FED_REMOTE_CMSD_MANAGER_ATLAS
set xrootfedlport = $XROOT_FED_LOCAL_PORT_ATLAS
set xrdlibdir = $XRDLIBDIR

#>>>>>>>>>>>>>

all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd
all.export /atlas/
#all.sitename <to_be_set>

xrd.network nodnr

pss.trace all
ofs.trace all
xrd.trace all
cms.trace all
oss.trace all

if exec xrootd
xrootd.seclib libXrdSec.so
sec.protocol /usr/$(xrdlibdir) gsi -crl:3 -key:/etc/grid-security/dpmmgr/dpmkey.pem -cert:/etc/grid-security/dpmmgr/dpmcert.pem -md:sha256:sha1 -ca:2 -gmapopt:10 -vomsat:0
sec.protocol /usr/$(xrdlibdir) unix

ofs.cmslib libXrdDPMFinder.so.3
ofs.osslib libXrdDPMOss.so.3

ofs.authlib libXrdDPMRedirAcc.so.3
ofs.authorize

# access may be restricted by vo; but this option is only
# useful if voms attribute processing is enabled
# dpm.allowvo atlas

# use a namelib for more complex transformations
#
setenv LFC_HOST=the_lfc.example.com
setenv GLOBUS_THREAD_MODEL=pthread
setenv X509_USER_PROXY=/the/path/my_atlas_proxy
#dpm.namelib to_bet_set
dpm.namecheck to_be_set
#
# or for simple prefix check/additions or substitutions
#
# dpm.replacementprefix /atlas /dpm/example.com/home/myatlas
# dpm.defaultprefix /dpm/example.com/home

dpm.xrdserverport 1095

xrd.port $(xrootfedlport)
#xrootd.redirect $(xrootfedxrdmanager) ? /atlas/
all.role manager
ofs.forward all
dpm.enablecmsclient

#xrd.report atl-prod05.slac.stanford.edu:9931 every 60s all -buff -poll sync
fi

if exec cmsd
all.role server
ofs.osslib libXrdPss.so
pss.origin host:port
all.manager host+:port
fi

#xrootd.monitor all rbuff 32k auth flush 30s  window 5s dest files info user io redir atl-prod05.slac.stanford.edu:9930

';

use constant REDIR_EXPECTED_CONF_1 => '# This file is managed by Quattor - DO NOT EDIT lines generated by Quattor
#
if exec cmsd
all.role server
ofs.osslib libXrdPss.so
pss.origin localhost:11001
all.manager xrootd.ba.infn.it+:1213
fi
setenv DPM_HOST = grid05.lal.in2p3.fr
setenv DPNS_HOST = grid05.lal.in2p3.fr
all.export /store/
all.sitename GRIF-LAL
dpm.namecheck /dpm/lal.in2p3.fr/home/cms
dpm.namelib libXrdCmsTfc.so file:/etc/xrootd/storage.xml?protocol=direct
dpm.nohv1
sec.protocol /usr/$(xrdlibdir) gsi -ca:2 -cert:/etc/grid-security/dpmmgr/dpmcert.pem -crl:3 -gmapopt:10 -key:/etc/grid-security/dpmmgr/dpmkey.pem -md:sha256:sha1 -vomsfun:/usr/lib64/libXrdSecgsiVOMS.so
xrd.port 11001
xrootd.redirect xrootd.ba.infn.it:1094 ? /store/
set xrootfedcmsdmanager = xrootd.ba.infn.it+:1213
set xrootfedlport = 11001
set xrootfedxrdmanager = xrootd.ba.infn.it:1094
';

use constant CMS_REDIR_EXPECT_CONFG => '# This file is managed by Quattor - DO NOT EDIT lines generated by Quattor
#
#>>>>>>>>>>>>> Variable declarations

# Installation specific
set xrootfedxrdmanager = xrootd.ba.infn.it:1094
set xrootfedcmsdmanager = xrootd.ba.infn.it+:1213
set xrootfedlport = 11001
set xrdlibdir = $XRDLIBDIR

#>>>>>>>>>>>>>

all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd
all.export /store/
all.sitename GRIF-LAL

xrd.network nodnr

pss.trace all
ofs.trace all
xrd.trace all
cms.trace all
oss.trace all

if exec xrootd
xrootd.seclib libXrdSec.so
sec.protocol /usr/$(xrdlibdir) gsi -ca:2 -cert:/etc/grid-security/dpmmgr/dpmcert.pem -crl:3 -gmapopt:10 -key:/etc/grid-security/dpmmgr/dpmkey.pem -md:sha256:sha1 -vomsfun:/usr/lib64/libXrdSecgsiVOMS.so
sec.protocol /usr/$(xrdlibdir) unix

ofs.cmslib libXrdDPMFinder.so.3
ofs.osslib libXrdDPMOss.so.3

ofs.authlib libXrdDPMRedirAcc.so.3
ofs.authorize

# access may be restricted by vo; but this option is only
# useful if voms attribute processing is enabled
# dpm.allowvo atlas

# use a namelib for more complex transformations
#
#setenv LFC_HOST=the_lfc.example.com
setenv GLOBUS_THREAD_MODEL=pthread
#setenv X509_USER_PROXY=/the/path/my_atlas_proxy
dpm.namelib libXrdCmsTfc.so file:/etc/xrootd/storage.xml?protocol=direct
dpm.namecheck /dpm/lal.in2p3.fr/home/cms
#
# or for simple prefix check/additions or substitutions
#
# dpm.replacementprefix /atlas /dpm/example.com/home/myatlas
# dpm.defaultprefix /dpm/example.com/home

dpm.xrdserverport 1095

xrd.port 11001
xrootd.redirect xrootd.ba.infn.it:1094 ? /store/
all.role manager
ofs.forward all
dpm.enablecmsclient

#xrd.report atl-prod05.slac.stanford.edu:9931 every 60s all -buff -poll sync
fi

if exec cmsd
all.role server
ofs.osslib libXrdPss.so
pss.origin localhost:11001
all.manager xrootd.ba.infn.it+:1213
fi

#xrootd.monitor all rbuff 32k auth flush 30s  window 5s dest files info user io redir atl-prod05.slac.stanford.edu:9930

setenv DPM_HOST = grid05.lal.in2p3.fr
setenv DPNS_HOST = grid05.lal.in2p3.fr
dpm.nohv1
';

use constant ATLAS_REDIR_EXPECT_CONFG => '# This file is managed by Quattor - DO NOT EDIT lines generated by Quattor
#
#>>>>>>>>>>>>> Variable declarations

# Installation specific
set xrootfedxrdmanager = atlas-xrd-fr.cern.ch:1094
set xrootfedcmsdmanager = atlas-xrd-fr.cern.ch+:1098
set xrootfedlport = 11000
set xrdlibdir = $XRDLIBDIR

#>>>>>>>>>>>>>

all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd
all.export /atlas/
#all.sitename <to_be_set>

xrd.network nodnr

pss.trace all
ofs.trace all
xrd.trace all
cms.trace all
oss.trace all

if exec xrootd
xrootd.seclib libXrdSec.so
sec.protocol /usr/$(xrdlibdir) gsi -ca:2 -cert:/etc/grid-security/dpmmgr/dpmcert.pem -crl:3 -gmapopt:10 -key:/etc/grid-security/dpmmgr/dpmkey.pem -md:sha256:sha1 -vomsfun:/usr/lib64/libXrdSecgsiVOMS.so
sec.protocol /usr/$(xrdlibdir) unix

ofs.cmslib libXrdDPMFinder.so.3
ofs.osslib libXrdDPMOss.so.3

ofs.authlib libXrdDPMRedirAcc.so.3
ofs.authorize

# access may be restricted by vo; but this option is only
# useful if voms attribute processing is enabled
# dpm.allowvo atlas

# use a namelib for more complex transformations
#
setenv LFC_HOST = prod-lfc-atlas-ro.cern.ch
setenv GLOBUS_THREAD_MODEL=pthread
#setenv X509_USER_PROXY=/the/path/my_atlas_proxy
dpm.namelib XrdOucName2NameLFC.so root=/dpm/lal.in2p3.fr/home/atlas match=grid05.lal.in2p3.fr
dpm.namecheck /dpm/lal.in2p3.fr/home/atlas
#
# or for simple prefix check/additions or substitutions
#
# dpm.replacementprefix /atlas /dpm/example.com/home/myatlas
# dpm.defaultprefix /dpm/example.com/home

dpm.xrdserverport 1095

xrd.port 11000
xrootd.redirect atlas-xrd-fr.cern.ch:1094 ? /atlas/
all.role manager
ofs.forward all
dpm.enablecmsclient

xrd.report atl-prod05.slac.stanford.edu:9931 every 60s all -buff -poll sync
fi

if exec cmsd
all.role server
ofs.osslib libXrdPss.so
pss.origin localhost:11000
all.manager atlas-xrd-fr.cern.ch+:1098
fi

xrootd.monitor all rbuff 32k auth flush 30s window 5s dest files info user io redir atl-prod05.slac.stanford.edu:9930

setenv CSEC_MECH = ID
setenv DPM_HOST = grid05.lal.in2p3.fr
setenv DPNS_HOST = grid05.lal.in2p3.fr
setenv LFC_CONRETRY = 0
dpm.nohv1
';


#############
# Main code #
#############

$CAF::Object::NoAction = 1;
set_caf_file_close_diff(1);

my $comp = NCM::Component::xrootd->new('xrootd');
my $fed_redir_rules = $comp->getRules("fedredir");
my %parser_options;
$parser_options{remove_if_undef} = 1;


# Test with CMS federation parameters
my $federation = 'cms';    # Must match pan template contents
my $config = get_config_for_profile("cms-fed-redir");
my $xrootd_options = $config->getElement("/software/components/xrootd/options")->getTree();
ok(defined($xrootd_options->{federations}->{$federation}),"Federation $federation options found");
$xrootd_options->{fedparams} = $xrootd_options->{federations}->{$federation};

# Initial file is very minimal
set_file_contents(REDIR_CONF_FILE,REDIR_INITIAL_CONF_1);
my $changes = $comp->updateConfigFile(REDIR_CONF_FILE,
                                      $fed_redir_rules,
                                      $xrootd_options,
                                      \%parser_options);
my $fh = get_file(REDIR_CONF_FILE);
ok(defined($fh), REDIR_CONF_FILE." was opened");
is("$fh", REDIR_EXPECTED_CONF_1, REDIR_CONF_FILE." has expected contents");
$fh->close();

# Initial file is a realistic template for a federation config file
set_file_contents(REDIR_CONF_FILE,REDIR_INITIAL_CONF_2);
$changes = $comp->updateConfigFile(REDIR_CONF_FILE,
                                      $fed_redir_rules,
                                      $xrootd_options,
                                      \%parser_options);
$fh = get_file(REDIR_CONF_FILE);
ok(defined($fh), REDIR_CONF_FILE." was opened");
is("$fh", CMS_REDIR_EXPECT_CONFG, REDIR_CONF_FILE." (cms) has expected contents");
$fh->close();


# Test with ATLAS federation parameters
$federation = 'atlas';    # Must match pan template contents
$config = get_config_for_profile("atlas-fed-redir");
$xrootd_options = $config->getElement("/software/components/xrootd/options")->getTree();
ok(defined($xrootd_options->{federations}->{$federation}),"Federation $federation options found");
$xrootd_options->{fedparams} = $xrootd_options->{federations}->{$federation};

set_file_contents(REDIR_CONF_FILE,REDIR_INITIAL_CONF_2);
$changes = $comp->updateConfigFile(REDIR_CONF_FILE,
                                      $fed_redir_rules,
                                      $xrootd_options,
                                      \%parser_options);
$fh = get_file(REDIR_CONF_FILE);
ok(defined($fh), REDIR_CONF_FILE." was opened");
is("$fh", ATLAS_REDIR_EXPECT_CONFG, REDIR_CONF_FILE." (atlas) has expected contents");
$fh->close();


Test::NoWarnings::had_no_warnings();

