#${PMcomponent}

=head1 DESCRIPTION

The I<aiiserver> component manages the configuration of an AII
(Automated Installation Infrastructure) server.

=head1 RESOURCES

This components also uses configuration parameters related to https
from C<< ncm-ccm >>: ca_dir, ca_file, cert_file, key_file.

=cut

use parent qw(NCM::Component);
use CAF::FileWriter;

use Readonly;

Readonly my $CCMPATH => "/software/components/ccm";
Readonly my $AIIDIR	=> "/etc/aii";
Readonly my $AII_SHELLFE	=> "$AIIDIR/aii-shellfe.conf";
Readonly my $AII_DHCP	=> "$AIIDIR/aii-dhcp.conf";

Readonly my $HEADER => <<EOF;
# File generated by ncm-${project.artifactId}
# Do not edit
EOF

Readonly::Array my @CCM_IMPORTED_PROPERTIES => qw(ca_dir ca_file cert_file key_file);

our $EC = LC::Exception::Context->new->will_store_all;

our $NoActionSupported = 1;

sub make_config
{
    my ($self, $fn, $tree) = @_;

    my $fh = CAF::FileWriter->new($fn, log => $self);

    print $fh $HEADER;

    foreach my $k (sort keys %$tree) {
        print $fh "$k = ", $tree->{$k}, "\n";
    }

    return $fh->close();
}

sub Configure
{
    my ($self, $config) = @_;

    my $tree = $config->getTree($self->prefix());
    my $ccm_tree = $config->getTree($CCMPATH);

    my $ccm_props = { map {$_ => $ccm_tree->{$_}} grep {exists($ccm_tree->{$_})} @CCM_IMPORTED_PROPERTIES };
    my $shellfe = {%$ccm_props, %{$tree->{"aii-shellfe"}}};

    $self->make_config($AII_SHELLFE, $shellfe);

    # aii-dhcp configuration file
    $self->make_config($AII_DHCP, $tree->{"aii-dhcp"} || {});

    return 1;
}

1;
