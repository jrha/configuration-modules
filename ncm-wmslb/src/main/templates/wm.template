SbRetryDifferentProtocols = <%SbRetryDifferentProtocols|true%>;
EnableIsmIiGlue20Purchasing = <%EnableIsmIiGlue20Purchasing|false%>;
DisablePurchasingFromGris = <%DisablePurchasingFromGris|true%>;
IsmBlackList = {};
IsmIiG2LDAPCEFilterExt = "(|(&(objectclass=GLUE2ComputingService)(|(GLUE2ServiceType=org.glite.ce.ARC)(GLUE2ServiceType=org.glite.ce.CREAM)))(|(objectclass=GLUE2ComputingManager)(|(objectclass=GLUE2ComputingShare)(|(&(objectclass=GLUE2ComputingEndPoint)(GLUE2EndpointInterfaceName=org.glite.ce.CREAM))(|(objectclass=GLUE2ToStorageService)(|(&(objectclass=GLUE2MappingPolicy)(GLUE2PolicyScheme=org.glite.standard))(|(&(objectclass=GLUE2AccessPolicy)(GLUE2PolicyScheme=org.glite.standard))(|(objectclass=GLUE2ExecutionEnvironment)(|(objectclass=GLUE2ApplicationEnvironment)(|(objectclass=GLUE2Benchmark)))))))))))";
ExpiryPeriod = <%ExpiryPeriod|7200%>;
EnableIsmIiGlue13Purchasing = true;
JobWrapperTemplateDir = "<%JobWrapperTemplateDir|${WMS_JOBWRAPPER_TEMPLATE}%>";
IsmDump = "<%IsmDump|${WMS_VAR}/workload_manager/ismdump.fl%>";
IsmIiPurchasingRate = <%IsmIiPurchasingRate|480%>;
MatchRetryPeriod = <%MatchRetryPeriod|600%>;
MaxReplansCount = <%MaxReplansCount|5%>;
EnableRecovery = <%EnableRecovery|true%>;
LogLevel = <%LogLevel|5%>;
LogFile = "<%LogFile|${WMS_LOCATION_LOG}/workload_manager_events.log%>";
DliServiceName = "<%DliServiceName|data-location-interface%>";
RuntimeMalloc = "<%RuntimeMalloc%>";
BrokerLib = "libglite_wms_helper_broker_ism.so.0";
IsmUpdateRate = <%IsmUpdateRate|600%>;
WmsRequirements = ((ShortDeadlineJob =?= TRUE ? RegExp(".*sdj$", other.GlueCEUniqueID) : !RegExp(".*sdj$", other.GlueCEUniqueID)) && (other.GlueCEPolicyMaxTotalJobs == 0 || other.GlueCEStateTotalJobs < other.GlueCEPolicyMaxTotalJobs) && (EnableWmsFeedback =?= TRUE ? RegExp("cream", other.GlueCEImplementationName, "i") : true) && (member(CertificateSubject,other.GlueCEAccessControlBaseRule) || member(strcat("VO:",VirtualOrganisation),other.GlueCEAccessControlBaseRule) || FQANmember(strcat("VOMS:", VOMS_FQAN), other.GlueCEAccessControlBaseRule)) is true && FQANmember(strcat("DENY:",VOMS_FQAN), other.GlueCEAccessControlBaseRule) isnt true && (IsUndefined(other.OutputSE) || member(other.OutputSE, other.GlueCESEBindGroupSEUniqueID)));
CeMonitorAsynchPort = <%CeMonitorAsyncPort|0%>;
QueueSize = <%QueueSize%>;
EnableBulkMM = <%EnableBulkMM|true%>;
MaxRetryCount = <%MaxRetryCount|10%>;
SiServiceName = "<%SiServiceName|org.glite.SEIndex%>";
IsmIiG2LDAPSEFilterExt  = "(|(objectclass=GLUE2StorageService)(|(objectclass=GLUE2StorageManager)(|(objectclass=GLUE2StorageShare)(|(objectclass=GLUE2StorageEndPoint)(|(objectclass=GLUE2MappingPolicy)(|(objectclass=GLUE2AccessPolicy)(|(objectclass=GLUE2DataStore)(|(objectclass=GLUE2StorageServiceCapacity)(|(objectclass=GLUE2StorageShareCapacity))))))))))";
IsmThreads = <%IsmThreads|false%>;
IiGlueLib = "libglite_wms_ism_ii_purchaser.so.0";
MaxOutputSandboxSize = <%MaxOutputSandboxSize|-1%>;
CeForwardParameters = {"GlueHostMainMemoryVirtualSize","GlueHostMainMemoryRAMSize","GlueCEPolicyMaxCPUTime", "GlueCEPolicyMaxObtainableCPUTime", "GlueCEPolicyMaxObtainableWallClockTime", "GlueCEPolicyMaxWallClockTime" };
CeMonitorServices = {};
IsmIiLDAPCEFilterExt = <%IsmIiLDAPCEFilterExt%>;
ReplanGracePeriod = <%ReplanGracePeriod|3600%>;
Input = "<%Input|${WMS_LOCATION_VAR}/workload_manager/jobdir%>";
WorkerThreads = <%WorkerThreads|5%>;
